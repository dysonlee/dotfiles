# remap prefix from 'C-b' to 'C-\'
set-option -g prefix 'C-\'
unbind-key C-b
bind-key 'C-\' send-prefix

# disable the repeat
set-option -g repeat-time 0

# start window numbers at 1 to match keyboard order with tmux window order
set-option -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# auto window rename
set-option -g automatic-rename on

# enable activity alerts
set-window-option -g monitor-activity on
set-option -g visual-activity on

# increase scrollback lines
set-option -g history-limit 50000

# enable clipboard
set-option -g set-clipboard on

# mouse behavior
set-option -g mouse on

# disable escape delay
set-option -sg escape-time 0

# truecolor support
set-option -ga terminal-overrides ",xterm-256color:Tc"

# default terminal is 256 colors
set-option -g default-terminal "xterm-256color"

# aggressive resize
set-window-option -g aggressive-resize off

# iTerm2 window name
set-option -g set-titles on

# moving between panes.
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# resize panes with vim movement keys
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# remove confirmation questions when closing windows/panes
bind-key x kill-pane
bind-key & kill-window

# go to last window
bind-key ^ last-window

# splitting panes with current path
bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# move panes to another window
bind-key M-1 join-pane -t :1
bind-key M-2 join-pane -t :2
bind-key M-3 join-pane -t :3
bind-key M-4 join-pane -t :4
bind-key M-5 join-pane -t :5
bind-key M-6 join-pane -t :6
bind-key M-7 join-pane -t :7
bind-key M-8 join-pane -t :8
bind-key M-9 join-pane -t :9

# Use vim keybindings in copy mode
set-window-option -g mode-keys vi

# Update default binding of `Enter` and `Space to also use copy-pipe
unbind-key -T copy-mode-vi Enter
unbind-key -T copy-mode-vi Space

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

# begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send -X rectangle-toggle

# copy text in copy mode
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel

# popup window for finding command to run
bind-key R display-popup -E "tmux-commands | xargs -I{} tmux send-keys '{}' enter"
bind-key C display-popup -E "tmux-commands | xargs tmux new-window -c '#{pane_current_path}'"
bind-key | display-popup -E "tmux-commands | xargs tmux split-window -v -c '#{pane_current_path}'"
bind-key - display-popup -E "tmux-commands | xargs tmux split-window -h -c '#{pane_current_path}'"

# popup window for finding session to switch
bind-key S display-popup -E "tmux-sessions | xargs tmux switch-client -t"
bind-key P if-shell -F '#{==:#{session_name},popup}' {
  detach-client
} {
  if-shell -F '#{e|==:#{N/s:popup},0}' {
    new-session -d -s 'popup' 'tmux source-file ~/.dotfiles/tmux/sessions/popup.tmux.conf'
  }
  display-popup -w 80% -h 80% -E "tmux attach-session -t popup"
}

# shortcut for synchronize-panes toggle
bind-key I set-window-option synchronize-panes

# set fish as default shell if available
if-shell 'test -e /usr/bin/fish' {
  set-option -g default-shell /usr/bin/fish
}

if-shell 'test -e /usr/local/bin/fish' {
  set-option -g default-shell /usr/local/bin/fish
}

# setw -g pane-border-status bottom
# setw -g pane-border-format '_'

# status bar
set-option -g status on
set-option -g status-interval 1
set-option -g status-position bottom
set-option -g status-justify left
set-option -g status-style none,fg=#a6c088,bg=#202328

# status variables format
if-shell 'test "$(uname)" = "Darwin"' {
  set-option -g @OS ""
  set-option -g @IM "  #(defaults read ~/Library/Preferences/com.apple.HIToolbox.plist AppleCurrentKeyboardLayoutInputSourceID | awk -F. '{print $4}' | sed s/PinyinKeyboard/中/)"
} {
  set-option -g @OS ""
  set-option -g @IM " #(whoami)#{?SSH_CLIENT,@#h,}"
}
%hidden GIT_BRANCH="#(git -C #{pane_current_path} rev-parse --abbrev-ref HEAD)"

# status bar left
set-option -g status-left-length 100
set-option -g status-left-style none
set-option -g status-left "#[fg=#2a2c32,bg=#a6c088,nobold] #{E:@OS} #S ﬿ #[fg=#a6c088,bg=#2a2c32,nobold] "

# status bar right
set-option -g status-right-length 150
set-option -g status-right-style none
set-option -g status-right "#[fg=#2a2c32,bg=#2a2c32] #[fg=#a6c088,bg=#2a2c32] %a %b %d #[fg=#2a2c32] #[fg=#a6c088,bg=#2a2c32] %H:%M %p #[fg=#404450,bg=#2a2c32] #[fg=#181818,bg=#a6c088] #{?$GIT_BRANCH, $GIT_BRANCH #[fg=#404450] ,}#[fg=#181818,bg=#a6c088]#{E:@IM} "

# window bar style
set-option -g window-status-style "fg=#2a2c32,bg=#2a2c32"
set-option -g window-status-current-style "fg=#2a2c32,bg=#a6c088"
set-option -g window-status-activity-style "fg=#2a2c32,bg=#2a2c32"

set-option -g window-status-format '#[fg=#2a2c32,nobold] #[fg=#a6c088] #I: #W #{?window_last_flag, ,}#{?window_activity_flag,#[fg=#d79921] ,}'
set-option -g window-status-current-format '#[fg=#2a2c32,nobold] #[fg=#2a2c32] #I: #W #[fg=#2a3c32]#{?window_zoomed_flag,,} #[fg=#a6c088,bg=#a6c088,nobold] '
set-option -g window-status-separator ''

# pane border style
set-option -g pane-active-border-style fg='#2a2c32'
set-option -g pane-border-style fg='#2a2c32'

# message style
set-option -g message-style none,fg='#fe8010',bg='#2a2c32'
set-option -g message-command-style none,fg='#fe8010',bg='#2a2c32'

# local config
if-shell 'test -e ~/.tmux.conf.local' {
  source-file ~/.tmux.conf.local
}
